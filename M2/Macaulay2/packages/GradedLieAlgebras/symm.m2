doc ///
	Key
		"Holonomy Lie algebras and Symmetries"
	Headline 
		Hyperplane arrangements and automorphisms
	SeeAlso
	         "First LieAlgebra Tutorial"
		 "Second LieAlgebra Tutorial"
		 "Differential LieAlgebra Tutorial"
		 "Constructing Lie algebras"
		 	 
		 
	Description
	     Text
	          The function holonomyLie(A), see @TO holonomyLie@, constructs the holonomy Lie algebra
		  of a hyperplane arrangement or a matroid given by the set A of 2-flats. 
		  The input may be any set of 
		  subsets of a finite set A, such that all subsets have at most one element 
		  in common and are of length at least three 
		  (the 2-flats of size two are determined by those). 
		  Indeed, for any such set
		  of subsets there is a unique simple matroid of rank at most three with the
		  given set as the set of 2-flats of size at least three, and holonomyLie(A)
		  gives the holonomy Lie algebra of this matroid. 
		  
	     Example
		  L = holonomyLie({{a1,a2,a3},{a1,a4,a5},{a2,a4,a6}})
		  L.relsLie
		  		  
	     Text
	          The sum of the generators is a central element. Hence, by dividing out
		  by this element and using @TO minPresLie@ one obtains a presentation of
		  a Lie algebra with one generator less, which is isomorphic to the holonomy
		  Lie algebra in degrees >=2. 
		  
	     Example
	          L0 = L/{a1+a2+a3+a4+a5+a6}
		  L0 = minPresLie 3
		  peekLie L0
		  
	     Text
	          It is possible to get this Lie algebra directly by choosing one of 
		  the variables, picking all 2-flats containing that variable, deleting 
		  the variable and putting A equal to the set of deleted 2-flats and 
		  B equal
		  to the remaining 2-flats and finally applying holonomyLie(A,B).
		  
	     Example
	          L1 = holonomyLie({{a2,a3},{a4,a5}},{{a2,a4,a6}})
		  peekLie L1  
		  
	     Text
	          Choosing another generator to delete gives another presentation
		  (which is still isomorhic to the holonomy Lie algebra in degrees >=2).
		  
	     Example
	          L6 = holonomyLie({{a2,a4}},{{a1,a2,a3},{a1,a4,a5}})
		  peekLie L6
		  dimsLie 6
		  useLie L1
		  dimsLie 6
		  useLie L
		  dimsLie 6
		  	     
	     Text
	          The above corresponds to the deconing process of a central 
		  hyperplane arrangement, yielding an affine hyperplane arrangement. 
		  The first input set in holonomyLie should be 
		  all maximal sets of parallel hyperplanes of size at least two 
		  and the second input set
		  should be all maximal sets of hyperplanes of size at least three, 
		  which intersect in an affine 
		  space of codimension 2.
		  
	     Text
	     	  A local Lie algebra of a holonomy Lie algebra, see @TO localLie@, is
		  the Lie subalgebra generated by the generators in one of the sets 
		  defined in the input. If this set is of size k, then the local Lie
		  algebra is free on k generators if the set belongs to the first input
		  set and it is free on k-1 generators in degree >=2 if it belongs
		  to the second input set 
		  (observe that the numbering of the sets begins with 0).    
		  
	     Example
	          useLie L1 
	          peekLie localLie 1
		  peekLie localLie 2
	     Text
	          The kernel of the map, in degrees >=2, 
		  from L to the direct sum of the local Lie algebras, see @TO localLie@,
		  is obtained by @TO decompidealLie@. This ideal is generated by the basis
		  elements in degree 3 of the form (a b c) where not all of a,b,c belong
		  to the same local Lie algebra.
		  
		  
	     Example
	          decompidealLie 3
		  
	     Text
	          Hence L1, in degrees >=2,  is the direct sum of its local Lie
		  algebras, L1 is "decomposable".  This is not true for the
		  "quadrangel", i.e., the graphical
		  arrangement of the complete graph on four vertices, which is also
		  the braid arrangement in dimension 4. 
		  
	     Example
	          Q = holonomyLie({{a1,a2,a3},{a1,a4,a5},{a2,a4,a6},{a3,a5,a6}})
		  decompidealLie 3
		  Q1 = holonomyLie({{a2,a3},{a4,a5}},{{a2,a4,a6},{a3,a5,a6}})
		  decompidealLie 3		  
	    
	     Text
	          Here is a way to obtain @TO decompidealLie@ (which is not used
		  in the program). The direct
		  sum of the local Lie algebras of Q1 may be obtained as follows
		  
	     Example
	          L0 = localLie 0
		  L1 = localLie 1
		  L2 = localLie 2
		  L3 = localLie 3
	          M = L0**L1**L2**L3
		  M.gensLie
		  
	     Text
	          and the map from Q1 to M is given as
		  
	     Example
	          f = mapLie(M,Q1,{pr_0+pr_4,pr_1+pr_7,pr_2+pr_5,pr_3+pr_8,pr_6+pr_9})
		  peekLie f
	     Text
	          and hence the ideal may be obtained as the kernel of f
		  
	     Example
	          kernelBasisLie(3,f)
	         		 	    
	     Text
	          The symmetric group S_4 operates on the vertices of K_4
		  and this induces an action of S_4 on the six edges, which
		  in turn induces an action of S_4 on Q as automorphisms. One
		  such permutation of the edges is (123)(465) but not (123)(456).
		  It is possible to check, using @TO symmetryLie@, 
		  if a permutation of the generators, 
		  written as a product
		  of cycles, or as  a rearrangement of the generators, 
		  defines an automorphism of the Lie algebra. If this is true,
		  then the map is given as output, else an error message
		  is written. 
		   		   
	     Example
	          useLie Q
		  symmetryLie({{a1,a2,a3},{a4,a5,a6}})
		  f=symmetryLie({{a1,a2,a3},{a4,a6,a5}})
		  peekLie f
		  g=symmetryLie({a2,a3,a1,a6,a4,a5})
		  peekLie g		  
		  
	     Text
	          The ideal decompidealLie is invariant under all automorphisms
		  of L. We may use @TO characterLie@ and a character table
		  for S_4 to determine its irreducible
		  representation constituents. There are four conjugacy classes 
		  (except id). Representatives for them as permutation of the six 
		  generators are (23)(45), (123)(465), (16)(2354) and (16)(25)  
		  corresponding to one 2-cycle, one 3-cycle, one 4-cycle and a product
		  of two 2-cycles.
		  
	     Example
	          dec4 = decompidealLie 4
		  characterLie({{a2,a3},{a4,a5}},dec4)
		  characterLie({{a1,a2,a3},{a4,a6,a5}},dec4)
		  characterLie({{a1,a6},{a2,a3,a5,a4}},dec4)
		  characterLie({{a1,a6},{a2,a5}},dec4)
		  
	     Text
	          Making calculations with the character table for S_4, we see that
		  decompidealLie 4 is the sum of the irreducible representations
		  except the trivial representation. 
		  
		  
		  
		  
	     	  
    	    	  
///
end


