VPATH = @srcdir@
HOMEPAGE = http://www.multiprecision.org/
# obtained from https://ftp.gnu.org/gnu/mpc/
VERSION = 1.1.0
URL = http://macaulay2.com/Downloads/OtherSourceCode
LICENSEFILES = README
CONFIGOPTIONS += --disable-shared
# We disable building shared libraries here because of this error while building under Debian 9:
# /bin/bash ../libtool  --tag=CC   --mode=link gcc  -std=gnu11 -g3 -O2  -version-info 4:0:1 -L/home/dan/src/M2/M2/BUILD/dan/builds.tmp/debian-release-1.13/usr-host/lib  -L/home/dan/src/M2/M2/BUILD/dan/builds.tmp/debian-release-1.13/submodules/memtailor/.libs  -L/home/dan/src/M2/M2/BUILD/dan/builds.tmp/debian-release-1.13/submodules/mathic/.libs  -L/home/dan/src/M2/M2/BUILD/dan/builds.tmp/debian-release-1.13/submodules/mathicgb/.libs -g3 -o libmpc.la ...
# libtool: link: ...
# /usr/bin/ld: /home/dan/src/M2/M2/BUILD/dan/builds.tmp/debian-release-1.13/usr-host/lib/libmpfr.a(div.o): relocation R_X86_64_PC32 against symbol `__gmpfr_emax' can not be used when making a shared object; recompile with -fPIC
# /usr/bin/ld: final link failed: Bad value
# collect2: error: ld returned 1 exit status
# The cause might be this (as revealed under Mac OS X): if we build libmpc shared, then since we don't build libmpfr shared,
# libmpc would link against and depend on the system's dynamic library for libmpfr, so both the dynamic and the static
# versions of libmpfr get loaded.  And when we build mpfr, we disable thread local variables, because we are using libgc.
include ../Makefile.library
Makefile: @srcdir@/Makefile.in ; cd ../.. && ./config.status libraries/mpc/Makefile
# Local Variables:
# compile-command: "make -w -C $M2BUILDDIR/libraries/mpc "
# End:
